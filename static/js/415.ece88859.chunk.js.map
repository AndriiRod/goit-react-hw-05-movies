{"version":3,"file":"static/js/415.ece88859.chunk.js","mappings":"8KAEAA,EAAAA,EAAAA,SAAAA,QAAyB,+BACzB,IAAMC,EAAU,mCAEVC,EAAiB,mCAAG,oGACDF,EAAAA,EAAAA,IAAU,sBAAuB,CACtDG,OAAQ,CACNC,QAASH,EACTI,SAAU,WAJU,cAClBC,EADkB,yBAOjBA,EAASC,MAPQ,2CAAH,qDAUjBC,EAAiB,mCAAG,WAAMC,GAAN,uFACDT,EAAAA,EAAAA,IAAA,iBAAoBS,GAAM,CAC/CN,OAAQ,CACNC,QAASH,EACTI,SAAU,WAJU,cAClBC,EADkB,yBAOjBA,EAASC,MAPQ,2CAAH,sDAUjBG,EAAiB,mCAAG,WAAMC,GAAN,uFACDX,EAAAA,EAAAA,IAAA,gBAA2B,CAChDG,OAAQ,CACNC,QAASH,EACTI,SAAU,QACVO,MAAOD,EACPE,cAAe,UANK,cAClBP,EADkB,yBASjBA,EAASC,MATQ,2CAAH,sDAWjBO,EAAY,mCAAG,WAAML,GAAN,uFACIT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAkC,CACvDN,OAAQ,CACNC,QAASH,EACTI,SAAU,WAJK,cACbC,EADa,yBAOZA,EAASC,MAPG,2CAAH,sDAUZQ,EAAe,mCAAG,WAAMN,GAAN,uFACCT,EAAAA,EAAAA,IAAA,iBAAoBS,EAApB,YAAkC,CACvDN,OAAQ,CACNC,QAASH,EACTI,SAAU,WAJQ,cAChBC,EADgB,yBAOfA,EAASC,MAPM,2CAAH,sDAUfS,EAAM,CACVd,kBAAAA,EACAM,kBAAAA,EACAE,kBAAAA,EACAI,aAAAA,EACAC,gBAAAA,GAGF,K,mEC1DA,EAJqB,SAAC,GAAiB,IAAfE,EAAc,EAAdA,QACtB,OAAO,yBAAMA,GACd,C,oFCAD,EAJkB,SAAC,GAAe,IAAbC,EAAY,EAAZA,MACnB,OAAO,uBAAIA,GACZ,ECsBD,EApBkB,SAAC,GAAc,IAAZX,EAAW,EAAXA,KACbY,GAAWC,EAAAA,EAAAA,MACjB,OAAoB,IAAhBb,EAAKc,QACA,+CAIP,wBACGd,EAAKe,KAAI,YAAoB,IAAjBJ,EAAgB,EAAhBA,MAAOT,EAAS,EAATA,GAClB,OACE,yBACE,SAAC,KAAD,CAAMc,GAAE,kBAAad,GAAMe,MAAO,CAAEC,KAAMN,GAA1C,UACE,SAAC,EAAD,CAAWD,MAAOA,OAFbT,EAMZ,KAGN,C,2HCjBKiB,EACE,OADFA,EAEK,UAFLA,EAGM,WAHNA,EAIM,WAiCZ,UA9Ba,WACX,OAA4BC,EAAAA,EAAAA,UAAS,IAArC,eAAOC,EAAP,KAAeC,EAAf,KACA,GAA4BF,EAAAA,EAAAA,UAASD,GAArC,eAAOI,EAAP,KAAeC,EAAf,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,MAAjD,eAAOK,EAAP,KAAqBC,EAArB,KAiBA,OAfAC,EAAAA,EAAAA,YAAU,WACRH,EAAUL,GACV,IAAMS,EAAU,mCAAG,6GAEQnB,EAAAA,EAAAA,oBAFR,OAETV,EAFS,OAGfuB,EAAUvB,EAAS8B,SACnBL,EAAUL,GAJK,gDAMfO,EAAgB,KAAMhB,SACtBc,EAAUL,GAPK,yDAAH,qDAUhBS,GACD,GAAE,KAGD,gCACE,iCACCL,IAAWJ,IAAkB,SAAC,IAAD,IAC7BI,IAAWJ,IAAmB,SAAC,IAAD,CAAcT,QAASe,IACrDF,IAAWJ,IAAmB,SAAC,IAAD,CAAWnB,KAAMqB,MAGrD,C","sources":["api/api.js","components/ErrorMessage/ErrorMessage.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","pages/Home.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60cc6ad85da178dfca0e63709f5042e0';\n\nconst GetTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst GetDetailsOfMovie = async id => {\n  const response = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst GetMoviesByTitles = async name => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      include_adult: 'true',\n    },\n  });\n  return response.data;\n};\nconst GetMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst GetMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst api = {\n  GetTrendingMovies,\n  GetDetailsOfMovie,\n  GetMoviesByTitles,\n  GetMovieCast,\n  GetMovieReviews,\n};\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default ErrorMessage;\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n};\n","const MovieItem = ({ title }) => {\n  return <p>{title}</p>;\n};\n\nexport default MovieItem;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport MovieItem from 'components/MovieItem/';\n\nconst MovieList = ({ data }) => {\n  const location = useLocation();\n  if (data.length === 0) {\n    return <div>No matches found</div>;\n  }\n\n  return (\n    <ul>\n      {data.map(({ title, id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <MovieItem title={title} />\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n","import api from 'api/api';\nimport MovieList from 'components/MovieList/';\nimport Loader from 'components/Loader/';\nimport ErrorMessage from 'components/ErrorMessage/';\nimport { useEffect, useState } from 'react';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Home = () => {\n  const [movies, setMovies] = useState([]);\n  const [status, setStatus] = useState(Status.IDLE);\n  const [errorMessage, setErrorMessage] = useState(null);\n\n  useEffect(() => {\n    setStatus(Status.PENDING);\n    const getRequest = async () => {\n      try {\n        const response = await api.GetTrendingMovies();\n        setMovies(response.results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setErrorMessage(error.message);\n        setStatus(Status.REJECTED);\n      }\n    };\n    getRequest();\n  }, []);\n\n  return (\n    <section>\n      <h1>Home</h1>\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <ErrorMessage message={errorMessage} />}\n      {status === Status.RESOLVED && <MovieList data={movies} />}\n    </section>\n  );\n};\n\nexport default Home;\n"],"names":["axios","API_KEY","GetTrendingMovies","params","api_key","language","response","data","GetDetailsOfMovie","id","GetMoviesByTitles","name","query","include_adult","GetMovieCast","GetMovieReviews","api","message","title","location","useLocation","length","map","to","state","from","Status","useState","movies","setMovies","status","setStatus","errorMessage","setErrorMessage","useEffect","getRequest","results"],"sourceRoot":""}