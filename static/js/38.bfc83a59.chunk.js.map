{"version":3,"file":"static/js/38.bfc83a59.chunk.js","mappings":"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","sources":["api/api.js","components/ErrorMessage/ErrorMessage.jsx","components/MovieItem/MovieItem.jsx","components/MovieList/MovieList.jsx","components/SearchBar/SearchBar.jsx","pages/Movies.jsx"],"sourcesContent":["import axios from 'axios';\n\naxios.defaults.baseURL = 'https://api.themoviedb.org/3';\nconst API_KEY = '60cc6ad85da178dfca0e63709f5042e0';\n\nconst GetTrendingMovies = async () => {\n  const response = await axios.get('/trending/movie/day', {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst GetDetailsOfMovie = async id => {\n  const response = await axios.get(`/movie/${id}`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst GetMoviesByTitles = async name => {\n  const response = await axios.get(`/search/movie`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n      query: name,\n      include_adult: 'true',\n    },\n  });\n  return response.data;\n};\nconst GetMovieCast = async id => {\n  const response = await axios.get(`/movie/${id}/credits`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst GetMovieReviews = async id => {\n  const response = await axios.get(`/movie/${id}/reviews`, {\n    params: {\n      api_key: API_KEY,\n      language: 'en-US',\n    },\n  });\n  return response.data;\n};\n\nconst api = {\n  GetTrendingMovies,\n  GetDetailsOfMovie,\n  GetMoviesByTitles,\n  GetMovieCast,\n  GetMovieReviews,\n};\n\nexport default api;\n","import PropTypes from 'prop-types';\n\nconst ErrorMessage = ({ message }) => {\n  return <div>{message}</div>;\n};\n\nexport default ErrorMessage;\n\nErrorMessage.propTypes = {\n  message: PropTypes.string,\n};\n","const MovieItem = ({ title }) => {\n  return <p>{title}</p>;\n};\n\nexport default MovieItem;\n","import PropTypes from 'prop-types';\nimport { Link, useLocation } from 'react-router-dom';\nimport MovieItem from 'components/MovieItem/';\n\nconst MovieList = ({ data }) => {\n  const location = useLocation();\n  if (data.length === 0) {\n    return <div>No matches found</div>;\n  }\n\n  return (\n    <ul>\n      {data.map(({ title, id }) => {\n        return (\n          <li key={id}>\n            <Link to={`/movies/${id}`} state={{ from: location }}>\n              <MovieItem title={title} />\n            </Link>\n          </li>\n        );\n      })}\n    </ul>\n  );\n};\nexport default MovieList;\n\nMovieList.propTypes = {\n  data: PropTypes.arrayOf(\n    PropTypes.shape({\n      title: PropTypes.string,\n      id: PropTypes.number,\n    })\n  ),\n};\n","import { useForm } from 'react-hook-form';\n\nconst SearchBar = ({ setNewSearchQuery }) => {\n  const { register, handleSubmit, reset } = useForm({\n    defaultValues: {\n      input: '',\n    },\n  });\n\n  const onSubmit = data => {\n    const formattedInput = data.input.toLowerCase().trim();\n    setNewSearchQuery(formattedInput);\n    reset();\n  };\n\n  return (\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <button type=\"submit\">Search</button>\n      <input type=\"text\" {...register('input')} placeholder=\"Enter name\" />\n    </form>\n  );\n};\n\nexport default SearchBar;\n","import { toast } from 'react-toastify';\nimport { useSearchParams } from 'react-router-dom';\nimport { useEffect, useState } from 'react';\n\nimport SearchBar from 'components/SearchBar/';\nimport Loader from 'components/Loader/';\nimport ErrorMessage from 'components/ErrorMessage/';\nimport MovieList from 'components/MovieList/';\n\nimport api from 'api/api';\n\nconst Status = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n\nconst Movies = () => {\n  const [searchParams, setSearchParams] = useSearchParams();\n  const [status, setStatus] = useState();\n  const [errorMessage, setErrorMessage] = useState(null);\n  const [movies, setMovies] = useState([]);\n  const searchQuery = searchParams.get('query');\n\n  const setNewSearchQuery = query => {\n    if (query === '') {\n      toast.info('Request cannot be empty');\n      return;\n    }\n    setSearchParams({ query: query });\n  };\n\n  useEffect(() => {\n    if (!searchQuery) return;\n    setStatus(Status.PENDING);\n    const getRequest = async () => {\n      try {\n        const response = await api.GetMoviesByTitles(searchQuery);\n        setMovies(response.results);\n        setStatus(Status.RESOLVED);\n      } catch (error) {\n        setErrorMessage(error.message);\n        setStatus(Status.REJECTED);\n      }\n    };\n    getRequest();\n  }, [searchQuery]);\n\n  return (\n    <section>\n      <SearchBar setNewSearchQuery={setNewSearchQuery} />\n      {status === Status.PENDING && <Loader />}\n      {status === Status.REJECTED && <ErrorMessage message={errorMessage} />}\n      {status === Status.RESOLVED && <MovieList data={movies} />}\n    </section>\n  );\n};\n\nexport default Movies;\n"],"names":["axios","API_KEY","GetTrendingMovies","params","api_key","language","response","data","GetDetailsOfMovie","id","GetMoviesByTitles","name","query","include_adult","GetMovieCast","GetMovieReviews","api","message","title","location","useLocation","length","map","to","state","from","setNewSearchQuery","useForm","defaultValues","input","register","handleSubmit","reset","onSubmit","formattedInput","toLowerCase","trim","type","placeholder","Status","useSearchParams","searchParams","setSearchParams","useState","status","setStatus","errorMessage","setErrorMessage","movies","setMovies","searchQuery","get","useEffect","getRequest","results","toast","Loader","ErrorMessage","MovieList"],"sourceRoot":""}